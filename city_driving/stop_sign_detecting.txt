HANDLING STOP SIGNS

by default, detect_stops is True
if we're detecting stops
    done in stop_detector:
    -> check if a stop sign is visible
    -> if so, calculate distance to the sign
    -> publish that sign is visible and the distance

    do in the controller:
    -> approach the stopping distance, similar logic to parking in front of the cone
    -> once stopped, set detect_stops to False so we start moving again
    -> once stop sign is no longer visible, set detect_stops to True (may need to change this to be more robust)


for passing info from stop_detector.py -> parking_controller.py, we could either calculate homography
inside stop_detector.py or in parking_controller.py. Gonna opt for stop_detector.py so that stop sign
logic can work with whatever driver we use (parking_controller, pure_pursuit, etc.)

TODO: figure out how to import StopSign.msg from visual_servoing package

TODO: add logic to handling msgs in the controller

